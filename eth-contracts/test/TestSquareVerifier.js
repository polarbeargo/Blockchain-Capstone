// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
// - use the contents from proof.json generated from zokrates steps

let SquareVerifier = artifacts.require('Verifier.sol');
const SolnSquareVerifier = artifacts.require('SolnSquareVerifier');

contract('Test SolnSquareVerifier', accounts => {

    describe('test verifier with proof', function () {
        beforeEach(async function () {
            this.contract = await SquareVerifier.new({from: accounts[0]});
        })

        // Test verification with correct proof
        it('verify with correct proof', async function () { 
            let verification = await this.contract.verifyTx.call();
            assert.equal(verification, true, 'Verification is invalid');
        })

        // Test verification with incorrect proof
        it('verify failure with incorrect proof', async function () { 
            let verification = await this.contract.verifyTx.call();
            assert.equal(verification, false, 'Verification is valid');
        })

    })
});